# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Helium::PocLora::Lora_beacon_report_req_v1`.
# Please instead update this file by running `bin/tapioca dsl Helium::PocLora::Lora_beacon_report_req_v1`.


class Helium::PocLora::Lora_beacon_report_req_v1 < Google::Protobuf::AbstractMessage
  sig do
    params(
      channel: T.nilable(Integer),
      data: T.nilable(String),
      datarate: T.nilable(T.any(Symbol, Integer)),
      frequency: T.nilable(Integer),
      local_entropy: T.nilable(String),
      pub_key: T.nilable(String),
      remote_entropy: T.nilable(String),
      signature: T.nilable(String),
      timestamp: T.nilable(Integer),
      tmst: T.nilable(Integer),
      tx_power: T.nilable(Integer)
    ).void
  end
  def initialize(channel: nil, data: nil, datarate: nil, frequency: nil, local_entropy: nil, pub_key: nil, remote_entropy: nil, signature: nil, timestamp: nil, tmst: nil, tx_power: nil); end

  sig { returns(Integer) }
  def channel; end

  sig { params(value: Integer).void }
  def channel=(value); end

  sig { void }
  def clear_channel; end

  sig { void }
  def clear_data; end

  sig { void }
  def clear_datarate; end

  sig { void }
  def clear_frequency; end

  sig { void }
  def clear_local_entropy; end

  sig { void }
  def clear_pub_key; end

  sig { void }
  def clear_remote_entropy; end

  sig { void }
  def clear_signature; end

  sig { void }
  def clear_timestamp; end

  sig { void }
  def clear_tmst; end

  sig { void }
  def clear_tx_power; end

  sig { returns(String) }
  def data; end

  sig { params(value: String).void }
  def data=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def datarate; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def datarate=(value); end

  sig { returns(Integer) }
  def frequency; end

  sig { params(value: Integer).void }
  def frequency=(value); end

  sig { returns(String) }
  def local_entropy; end

  sig { params(value: String).void }
  def local_entropy=(value); end

  sig { returns(String) }
  def pub_key; end

  sig { params(value: String).void }
  def pub_key=(value); end

  sig { returns(String) }
  def remote_entropy; end

  sig { params(value: String).void }
  def remote_entropy=(value); end

  sig { returns(String) }
  def signature; end

  sig { params(value: String).void }
  def signature=(value); end

  sig { returns(Integer) }
  def timestamp; end

  sig { params(value: Integer).void }
  def timestamp=(value); end

  sig { returns(Integer) }
  def tmst; end

  sig { params(value: Integer).void }
  def tmst=(value); end

  sig { returns(Integer) }
  def tx_power; end

  sig { params(value: Integer).void }
  def tx_power=(value); end
end
