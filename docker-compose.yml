services:
  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  chrome:
    image: seleniarm/standalone-chromium
    ports:
      - 4444:4444
      - 7900:7900
      - 5900:5900
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4444/wd/hub/status" ]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: bash -c "rm -f tmp/pids/server.pid && ./bin/dev"
    volumes:
      - .:/app
    ports:
      - "3000:3000"
      - "3010:3010"
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/app_development
      REDIS_URL: redis://redis:6379/1
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      chrome:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/" ]
      interval: 10s
      timeout: 5s
      retries: 3
    tty: true

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: bundle exec sidekiq
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432
      REDIS_URL: redis://redis:6379/1
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "ps aux | grep '[s]idekiq'" ]
      interval: 10s
      timeout: 5s
      retries: 3

  mailcatcher:
    platform: linux/x86_64
    image: dockage/mailcatcher:0.9.0
    ports:
      - "1080:1080"
      - "1025:1025"
    healthcheck:
      interval: 10s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://mailcatcher:1080 || exit 1

volumes:
  postgres_data:
  redis_data:
