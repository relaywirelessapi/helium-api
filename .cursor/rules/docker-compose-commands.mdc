---
description: Guidelines for running commands in the Rails environment via Docker Compose
globs: 
alwaysApply: true
---
# Docker Compose Commands Pattern

When running commands in the Rails environment, always use Docker Compose with the following patterns:

## Guidelines

1. For running commands when the web container is already running:
   ```
   docker-compose exec web [command]
   ```

2. For running commands when the web container is not running:
   ```
   docker-compose run --rm web [command]
   ```

3. The `--rm` flag ensures the container is removed after the command completes
4. Always specify the `web` service when running Rails commands
5. Use these patterns for all Rails commands, including:
   - Rails console: `docker-compose exec web rails c`
   - Running tests: `docker-compose exec web bundle exec rspec`
   - Database migrations: `docker-compose exec web rails db:migrate`
   - Bundle install: `docker-compose exec web bundle install`

## Examples

```bash
# Running Rails console
docker-compose exec web rails c

# Running RSpec tests
docker-compose exec web bundle exec rspec

# Running a specific test file
docker-compose exec web bundle exec rspec spec/models/user_spec.rb

# Running database migrations
docker-compose exec web rails db:migrate

# Installing gems
docker-compose run --rm web bundle install

# Running a Rake task
docker-compose exec web rails my_task:run
```