# typed: ignore
      # Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: packet_verifier_pb.proto
$LOAD_PATH.unshift Rails.root.join("vendor/helium-protobuf")

require 'google/protobuf'

descriptor_data = "\n\x1dservice/packet_verifier.proto\x12\x16helium.packet_verifier\"v\n\x0cvalid_packet\x12\x14\n\x0cpayload_size\x18\x01 \x01(\r\x12\x0f\n\x07gateway\x18\x02 \x01(\x0c\x12\x14\n\x0cpayload_hash\x18\x03 \x01(\x0c\x12\x0f\n\x07num_dcs\x18\x04 \x01(\r\x12\x18\n\x10packet_timestamp\x18\x05 \x01(\x04\"\x8c\x01\n\x0einvalid_packet\x12\x14\n\x0cpayload_size\x18\x01 \x01(\r\x12\x0f\n\x07gateway\x18\x02 \x01(\x0c\x12\x14\n\x0cpayload_hash\x18\x03 \x01(\x0c\x12=\n\x06reason\x18\x04 \x01(\x0e\x32-.helium.packet_verifier.invalid_packet_reason\"\xdf\x01\n\x1bvalid_data_transfer_session\x12\x0f\n\x07pub_key\x18\x01 \x01(\x0c\x12\x14\n\x0cupload_bytes\x18\x02 \x01(\x04\x12\x16\n\x0e\x64ownload_bytes\x18\x03 \x01(\x04\x12\x0f\n\x07num_dcs\x18\x04 \x01(\x04\x12\r\n\x05payer\x18\x05 \x01(\x0c\x12\x17\n\x0f\x66irst_timestamp\x18\x06 \x01(\x04\x12\x16\n\x0elast_timestamp\x18\x07 \x01(\x04\x12\x18\n\x10rewardable_bytes\x18\x08 \x01(\x04\x12\x16\n\x0e\x62urn_timestamp\x18\t \x01(\x04*G\n\x15invalid_packet_reason\x12.\n*invalid_packet_reason_insufficient_balance\x10\x00\x62\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Helium
  module PacketVerifier
    Valid_packet = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("helium.packet_verifier.valid_packet").msgclass
    Invalid_packet = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("helium.packet_verifier.invalid_packet").msgclass
    Valid_data_transfer_session = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("helium.packet_verifier.valid_data_transfer_session").msgclass
    Invalid_packet_reason = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("helium.packet_verifier.invalid_packet_reason").enummodule
  end
end
