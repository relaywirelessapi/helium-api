{
  "iot-reward-shares": "query IotRewardShares($after: String, $before: String, $first: Int, $last: Int, $startPeriod: ISO8601DateTime!, $endPeriod: ISO8601DateTime!, $hotspotKey: String, $rewardType: String) {\n  iotRewardShares(after: $after, before: $before, first: $first, last: $last, startPeriod: $startPeriod, endPeriod: $endPeriod, hotspotKey: $hotspotKey, rewardType: $rewardType) {\n    nodes {\n        id\n      rewardType\n      startPeriod\n      endPeriod\n      manifest {\n          id\n        writtenFiles\n        startTimestamp\n        endTimestamp\n        rewardData {\n          ... on RewardManifestMobileData {\n            rewardType\n          pocBonesPerRewardShare\n          boostedPocBonesPerRewardShare\n          serviceProviderPromotions {\n              serviceProvider\n            incentiveEscrowFundBps\n            promotions {\n                entity\n              startTs\n              endTs\n              shares\n            }\n          }\n          token\n        }\n          ... on RewardManifestIotData {\n            rewardType\n          pocBonesPerBeaconRewardShare\n          pocBonesPerWitnessRewardShare\n          dcBonesPerShare\n          token\n        }\n        }\n        epoch\n        price\n      }\n      rewardDetail {\n        ... on IotGatewayRewardDetail {\n          hotspotKey\n        beaconAmount\n        witnessAmount\n        dcTransferAmount\n        formattedBeaconAmount\n        formattedWitnessAmount\n        formattedDcTransferAmount\n      }\n        ... on IotOperationalRewardDetail {\n          amount\n        formattedAmount\n      }\n        ... on IotUnallocatedRewardDetail {\n          unallocatedRewardType\n        amount\n        formattedAmount\n      }\n      }\n    }\n    pageInfo {\n        hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n  }\n}\n",
  "mobile-reward-shares": "query MobileRewardShares($after: String, $before: String, $first: Int, $last: Int, $startPeriod: ISO8601DateTime!, $endPeriod: ISO8601DateTime!, $hotspotKey: String, $rewardType: String) {\n  mobileRewardShares(after: $after, before: $before, first: $first, last: $last, startPeriod: $startPeriod, endPeriod: $endPeriod, hotspotKey: $hotspotKey, rewardType: $rewardType) {\n    nodes {\n        id\n      rewardType\n      startPeriod\n      endPeriod\n      manifest {\n          id\n        writtenFiles\n        startTimestamp\n        endTimestamp\n        rewardData {\n          ... on RewardManifestMobileData {\n            rewardType\n          pocBonesPerRewardShare\n          boostedPocBonesPerRewardShare\n          serviceProviderPromotions {\n              serviceProvider\n            incentiveEscrowFundBps\n            promotions {\n                entity\n              startTs\n              endTs\n              shares\n            }\n          }\n          token\n        }\n          ... on RewardManifestIotData {\n            rewardType\n          pocBonesPerBeaconRewardShare\n          pocBonesPerWitnessRewardShare\n          dcBonesPerShare\n          token\n        }\n        }\n        epoch\n        price\n      }\n      rewardDetail {\n        ... on MobileRadioRewardDetail {\n          hotspotKey\n        cbsdId\n        dcTransferReward\n        formattedDcTransferReward\n        pocReward\n        formattedPocReward\n      }\n        ... on MobileGatewayRewardDetail {\n          hotspotKey\n        dcTransferReward\n        formattedDcTransferReward\n      }\n        ... on MobileSubscriberRewardDetail {\n          subscriberId\n        discoveryLocationAmount\n        formattedDiscoveryLocationAmount\n        formattedSubscriberReward\n      }\n        ... on MobileServiceProviderRewardDetail {\n          serviceProviderId\n        amount\n        formattedAmount\n      }\n        ... on MobileUnallocatedRewardDetail {\n          unallocatedRewardType\n        amount\n      }\n        ... on MobileRadioRewardV2Share {\n          hotspotKey\n        cbsdId\n        baseCoveragePointsSum\n        boostedCoveragePointsSum\n        baseRewardShares\n        boostedRewardShares\n        basePocReward\n        boostedPocReward\n        seniorityTimestamp\n        coverageObject\n        locationTrustScoreMultiplier\n        speedtestMultiplier\n        spBoostedHexStatus\n        oracleBoostedHexStatus\n      }\n        ... on MobilePromotionRewardDetail {\n          entity\n        serviceProviderAmount\n        matchedAmount\n      }\n      }\n    }\n    pageInfo {\n        hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n  }\n}\n",
  "reward-manifests": "query RewardManifests($after: String, $before: String, $first: Int, $last: Int, $startTimestamp: ISO8601DateTime!, $endTimestamp: ISO8601DateTime!) {\n  rewardManifests(after: $after, before: $before, first: $first, last: $last, startTimestamp: $startTimestamp, endTimestamp: $endTimestamp) {\n    nodes {\n        id\n      writtenFiles\n      startTimestamp\n      endTimestamp\n      rewardData {\n        ... on RewardManifestMobileData {\n          rewardType\n        pocBonesPerRewardShare\n        boostedPocBonesPerRewardShare\n        serviceProviderPromotions {\n            serviceProvider\n          incentiveEscrowFundBps\n          promotions {\n              entity\n            startTs\n            endTs\n            shares\n          }\n        }\n        token\n      }\n        ... on RewardManifestIotData {\n          rewardType\n        pocBonesPerBeaconRewardShare\n        pocBonesPerWitnessRewardShare\n        dcBonesPerShare\n        token\n      }\n      }\n      epoch\n      price\n    }\n    pageInfo {\n        hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n  }\n}\n"
}