# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Helium::PacketVerifier::Invalid_packet`.
# Please instead update this file by running `bin/tapioca dsl Helium::PacketVerifier::Invalid_packet`.


class Helium::PacketVerifier::Invalid_packet < Google::Protobuf::AbstractMessage
  sig do
    params(
      gateway: T.nilable(String),
      payload_hash: T.nilable(String),
      payload_size: T.nilable(Integer),
      reason: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(gateway: nil, payload_hash: nil, payload_size: nil, reason: nil); end

  sig { void }
  def clear_gateway; end

  sig { void }
  def clear_payload_hash; end

  sig { void }
  def clear_payload_size; end

  sig { void }
  def clear_reason; end

  sig { returns(String) }
  def gateway; end

  sig { params(value: String).void }
  def gateway=(value); end

  sig { returns(String) }
  def payload_hash; end

  sig { params(value: String).void }
  def payload_hash=(value); end

  sig { returns(Integer) }
  def payload_size; end

  sig { params(value: Integer).void }
  def payload_size=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def reason; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def reason=(value); end
end
