# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Helium::Boosted_hex_info_v1`.
# Please instead update this file by running `bin/tapioca dsl Helium::Boosted_hex_info_v1`.


class Helium::Boosted_hex_info_v1 < Google::Protobuf::AbstractMessage
  sig do
    params(
      boost_config_pubkey: T.nilable(String),
      boosted_hex_pubkey: T.nilable(String),
      end_ts: T.nilable(Integer),
      location: T.nilable(Integer),
      multipliers: T.nilable(T.any(Google::Protobuf::RepeatedField[Integer], T::Array[Integer])),
      period_length: T.nilable(Integer),
      start_ts: T.nilable(Integer),
      version: T.nilable(Integer)
    ).void
  end
  def initialize(boost_config_pubkey: nil, boosted_hex_pubkey: nil, end_ts: nil, location: nil, multipliers: T.unsafe(nil), period_length: nil, start_ts: nil, version: nil); end

  sig { returns(String) }
  def boost_config_pubkey; end

  sig { params(value: String).void }
  def boost_config_pubkey=(value); end

  sig { returns(String) }
  def boosted_hex_pubkey; end

  sig { params(value: String).void }
  def boosted_hex_pubkey=(value); end

  sig { void }
  def clear_boost_config_pubkey; end

  sig { void }
  def clear_boosted_hex_pubkey; end

  sig { void }
  def clear_end_ts; end

  sig { void }
  def clear_location; end

  sig { void }
  def clear_multipliers; end

  sig { void }
  def clear_period_length; end

  sig { void }
  def clear_start_ts; end

  sig { void }
  def clear_version; end

  sig { returns(Integer) }
  def end_ts; end

  sig { params(value: Integer).void }
  def end_ts=(value); end

  sig { returns(Integer) }
  def location; end

  sig { params(value: Integer).void }
  def location=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Integer]) }
  def multipliers; end

  sig { params(value: Google::Protobuf::RepeatedField[Integer]).void }
  def multipliers=(value); end

  sig { returns(Integer) }
  def period_length; end

  sig { params(value: Integer).void }
  def period_length=(value); end

  sig { returns(Integer) }
  def start_ts; end

  sig { params(value: Integer).void }
  def start_ts=(value); end

  sig { returns(Integer) }
  def version; end

  sig { params(value: Integer).void }
  def version=(value); end
end
