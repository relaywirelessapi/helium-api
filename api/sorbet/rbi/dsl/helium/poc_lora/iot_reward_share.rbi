# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Helium::PocLora::Iot_reward_share`.
# Please instead update this file by running `bin/tapioca dsl Helium::PocLora::Iot_reward_share`.


class Helium::PocLora::Iot_reward_share < Google::Protobuf::AbstractMessage
  sig do
    params(
      end_period: T.nilable(Integer),
      gateway_reward: T.nilable(Helium::PocLora::Gateway_reward),
      operational_reward: T.nilable(Helium::PocLora::Operational_reward),
      start_period: T.nilable(Integer),
      unallocated_reward: T.nilable(Helium::PocLora::Unallocated_reward)
    ).void
  end
  def initialize(end_period: nil, gateway_reward: nil, operational_reward: nil, start_period: nil, unallocated_reward: nil); end

  sig { void }
  def clear_end_period; end

  sig { void }
  def clear_gateway_reward; end

  sig { void }
  def clear_operational_reward; end

  sig { void }
  def clear_start_period; end

  sig { void }
  def clear_unallocated_reward; end

  sig { returns(Integer) }
  def end_period; end

  sig { params(value: Integer).void }
  def end_period=(value); end

  sig { returns(T.nilable(Helium::PocLora::Gateway_reward)) }
  def gateway_reward; end

  sig { params(value: T.nilable(Helium::PocLora::Gateway_reward)).void }
  def gateway_reward=(value); end

  sig { returns(Object) }
  def has_gateway_reward?; end

  sig { returns(Object) }
  def has_operational_reward?; end

  sig { returns(Object) }
  def has_unallocated_reward?; end

  sig { returns(T.nilable(Helium::PocLora::Operational_reward)) }
  def operational_reward; end

  sig { params(value: T.nilable(Helium::PocLora::Operational_reward)).void }
  def operational_reward=(value); end

  sig { returns(T.nilable(Symbol)) }
  def reward; end

  sig { returns(Integer) }
  def start_period; end

  sig { params(value: Integer).void }
  def start_period=(value); end

  sig { returns(T.nilable(Helium::PocLora::Unallocated_reward)) }
  def unallocated_reward; end

  sig { params(value: T.nilable(Helium::PocLora::Unallocated_reward)).void }
  def unallocated_reward=(value); end
end
