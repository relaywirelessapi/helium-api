# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Helium::PocMobile::Radio_usage_stats_req_v1`.
# Please instead update this file by running `bin/tapioca dsl Helium::PocMobile::Radio_usage_stats_req_v1`.


class Helium::PocMobile::Radio_usage_stats_req_v1 < Google::Protobuf::AbstractMessage
  sig do
    params(
      carrier_mapping_key: T.nilable(String),
      carrier_transfer_info: T.nilable(T.any(Google::Protobuf::RepeatedField[Helium::PocMobile::Radio_usage_carrier_transfer_info], T::Array[Helium::PocMobile::Radio_usage_carrier_transfer_info])),
      cbsd_id: T.nilable(String),
      disco_mapping_user_count: T.nilable(Integer),
      epoch_end_timestamp: T.nilable(Integer),
      epoch_start_timestamp: T.nilable(Integer),
      hotspot_pubkey: T.nilable(String),
      offload_transfer_bytes: T.nilable(Integer),
      offload_user_count: T.nilable(Integer),
      service_provider_transfer_bytes: T.nilable(Integer),
      service_provider_user_count: T.nilable(Integer),
      signature: T.nilable(String),
      timestamp: T.nilable(Integer)
    ).void
  end
  def initialize(carrier_mapping_key: nil, carrier_transfer_info: T.unsafe(nil), cbsd_id: nil, disco_mapping_user_count: nil, epoch_end_timestamp: nil, epoch_start_timestamp: nil, hotspot_pubkey: nil, offload_transfer_bytes: nil, offload_user_count: nil, service_provider_transfer_bytes: nil, service_provider_user_count: nil, signature: nil, timestamp: nil); end

  sig { returns(String) }
  def carrier_mapping_key; end

  sig { params(value: String).void }
  def carrier_mapping_key=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Helium::PocMobile::Radio_usage_carrier_transfer_info]) }
  def carrier_transfer_info; end

  sig { params(value: Google::Protobuf::RepeatedField[Helium::PocMobile::Radio_usage_carrier_transfer_info]).void }
  def carrier_transfer_info=(value); end

  sig { returns(String) }
  def cbsd_id; end

  sig { params(value: String).void }
  def cbsd_id=(value); end

  sig { void }
  def clear_carrier_mapping_key; end

  sig { void }
  def clear_carrier_transfer_info; end

  sig { void }
  def clear_cbsd_id; end

  sig { void }
  def clear_disco_mapping_user_count; end

  sig { void }
  def clear_epoch_end_timestamp; end

  sig { void }
  def clear_epoch_start_timestamp; end

  sig { void }
  def clear_hotspot_pubkey; end

  sig { void }
  def clear_offload_transfer_bytes; end

  sig { void }
  def clear_offload_user_count; end

  sig { void }
  def clear_service_provider_transfer_bytes; end

  sig { void }
  def clear_service_provider_user_count; end

  sig { void }
  def clear_signature; end

  sig { void }
  def clear_timestamp; end

  sig { returns(Integer) }
  def disco_mapping_user_count; end

  sig { params(value: Integer).void }
  def disco_mapping_user_count=(value); end

  sig { returns(Integer) }
  def epoch_end_timestamp; end

  sig { params(value: Integer).void }
  def epoch_end_timestamp=(value); end

  sig { returns(Integer) }
  def epoch_start_timestamp; end

  sig { params(value: Integer).void }
  def epoch_start_timestamp=(value); end

  sig { returns(String) }
  def hotspot_pubkey; end

  sig { params(value: String).void }
  def hotspot_pubkey=(value); end

  sig { returns(Integer) }
  def offload_transfer_bytes; end

  sig { params(value: Integer).void }
  def offload_transfer_bytes=(value); end

  sig { returns(Integer) }
  def offload_user_count; end

  sig { params(value: Integer).void }
  def offload_user_count=(value); end

  sig { returns(Integer) }
  def service_provider_transfer_bytes; end

  sig { params(value: Integer).void }
  def service_provider_transfer_bytes=(value); end

  sig { returns(Integer) }
  def service_provider_user_count; end

  sig { params(value: Integer).void }
  def service_provider_user_count=(value); end

  sig { returns(String) }
  def signature; end

  sig { params(value: String).void }
  def signature=(value); end

  sig { returns(Integer) }
  def timestamp; end

  sig { params(value: Integer).void }
  def timestamp=(value); end
end
