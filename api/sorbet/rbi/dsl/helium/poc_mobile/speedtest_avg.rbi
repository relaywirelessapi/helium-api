# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Helium::PocMobile::Speedtest_avg`.
# Please instead update this file by running `bin/tapioca dsl Helium::PocMobile::Speedtest_avg`.


class Helium::PocMobile::Speedtest_avg < Google::Protobuf::AbstractMessage
  sig do
    params(
      download_speed_avg_bps: T.nilable(Integer),
      latency_avg_ms: T.nilable(Integer),
      pub_key: T.nilable(String),
      reward_multiplier: T.nilable(Float),
      speedtests: T.nilable(T.any(Google::Protobuf::RepeatedField[Helium::PocMobile::Speedtest], T::Array[Helium::PocMobile::Speedtest])),
      timestamp: T.nilable(Integer),
      upload_speed_avg_bps: T.nilable(Integer),
      validity: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(download_speed_avg_bps: nil, latency_avg_ms: nil, pub_key: nil, reward_multiplier: nil, speedtests: T.unsafe(nil), timestamp: nil, upload_speed_avg_bps: nil, validity: nil); end

  sig { void }
  def clear_download_speed_avg_bps; end

  sig { void }
  def clear_latency_avg_ms; end

  sig { void }
  def clear_pub_key; end

  sig { void }
  def clear_reward_multiplier; end

  sig { void }
  def clear_speedtests; end

  sig { void }
  def clear_timestamp; end

  sig { void }
  def clear_upload_speed_avg_bps; end

  sig { void }
  def clear_validity; end

  sig { returns(Integer) }
  def download_speed_avg_bps; end

  sig { params(value: Integer).void }
  def download_speed_avg_bps=(value); end

  sig { returns(Integer) }
  def latency_avg_ms; end

  sig { params(value: Integer).void }
  def latency_avg_ms=(value); end

  sig { returns(String) }
  def pub_key; end

  sig { params(value: String).void }
  def pub_key=(value); end

  sig { returns(Float) }
  def reward_multiplier; end

  sig { params(value: Float).void }
  def reward_multiplier=(value); end

  sig { returns(Google::Protobuf::RepeatedField[Helium::PocMobile::Speedtest]) }
  def speedtests; end

  sig { params(value: Google::Protobuf::RepeatedField[Helium::PocMobile::Speedtest]).void }
  def speedtests=(value); end

  sig { returns(Integer) }
  def timestamp; end

  sig { params(value: Integer).void }
  def timestamp=(value); end

  sig { returns(Integer) }
  def upload_speed_avg_bps; end

  sig { params(value: Integer).void }
  def upload_speed_avg_bps=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def validity; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def validity=(value); end
end
