# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Helium::Mapper_attach_v1`.
# Please instead update this file by running `bin/tapioca dsl Helium::Mapper_attach_v1`.


class Helium::Mapper_attach_v1 < Google::Protobuf::AbstractMessage
  sig do
    params(
      attach_counter: T.nilable(Integer),
      candidate: T.nilable(Helium::Mapper_attach_v1::Mapper_attach_candidate),
      gps: T.nilable(Helium::Mapper_gps_v1),
      result: T.nilable(T.any(Symbol, Integer))
    ).void
  end
  def initialize(attach_counter: nil, candidate: nil, gps: nil, result: nil); end

  sig { returns(Integer) }
  def attach_counter; end

  sig { params(value: Integer).void }
  def attach_counter=(value); end

  sig { returns(T.nilable(Helium::Mapper_attach_v1::Mapper_attach_candidate)) }
  def candidate; end

  sig { params(value: T.nilable(Helium::Mapper_attach_v1::Mapper_attach_candidate)).void }
  def candidate=(value); end

  sig { void }
  def clear_attach_counter; end

  sig { void }
  def clear_candidate; end

  sig { void }
  def clear_gps; end

  sig { void }
  def clear_result; end

  sig { returns(T.nilable(Helium::Mapper_gps_v1)) }
  def gps; end

  sig { params(value: T.nilable(Helium::Mapper_gps_v1)).void }
  def gps=(value); end

  sig { returns(Object) }
  def has_candidate?; end

  sig { returns(Object) }
  def has_gps?; end

  sig { returns(T.any(Symbol, Integer)) }
  def result; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def result=(value); end
end
