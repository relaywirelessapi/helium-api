# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `base58` gem.
# Please instead update this file by running `bin/tapioca gem base58`.


# source://base58//lib/base58.rb#6
class Base58
  class << self
    # Converts a base58 string to an ASCII-8BIT (binary) encoded string.
    # All leading zeroes in the base58 input are preserved and converted to
    # "\x00" in the output.
    #
    # @raise [ArgumentError]
    #
    # source://base58//lib/base58.rb#62
    def base58_to_binary(base58_val, alphabet = T.unsafe(nil)); end

    # Converts a base58 string to a base10 integer.
    #
    # @raise [ArgumentError]
    #
    # source://base58//lib/base58.rb#19
    def base58_to_int(base58_val, alphabet = T.unsafe(nil)); end

    # Converts a ASCII-8BIT (binary) encoded string to a base58 string.
    #
    # @raise [ArgumentError]
    #
    # source://base58//lib/base58.rb#43
    def binary_to_base58(binary_val, alphabet = T.unsafe(nil), include_leading_zeroes = T.unsafe(nil)); end

    # Converts a base58 string to a base10 integer.
    #
    # @raise [ArgumentError]
    #
    # source://base58//lib/base58.rb#19
    def decode(base58_val, alphabet = T.unsafe(nil)); end

    # Converts a base10 integer to a base58 string.
    #
    # @raise [ArgumentError]
    #
    # source://base58//lib/base58.rb#30
    def encode(int_val, alphabet = T.unsafe(nil)); end

    # Converts a base10 integer to a base58 string.
    #
    # @raise [ArgumentError]
    #
    # source://base58//lib/base58.rb#30
    def int_to_base58(int_val, alphabet = T.unsafe(nil)); end
  end
end

# See https://en.wikipedia.org/wiki/Base58
#
# source://base58//lib/base58.rb#9
Base58::ALPHABETS = T.let(T.unsafe(nil), Hash)

# NOTE: If adding new alphabets of non-standard length, this should become a method.
#
# source://base58//lib/base58.rb#16
Base58::BASE = T.let(T.unsafe(nil), Integer)

# source://base58//lib/base58.rb#69
module Base58::Private
  class << self
    # source://base58//lib/base58.rb#70
    def int_to_hex(int); end
  end
end
